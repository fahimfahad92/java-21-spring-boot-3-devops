name: Deploy to EKS
on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: ap-southeast-1
  ECR_REPO: demo-app
  DOCKER_FILE: Dockerfile-liberica-multi-stage
  IAM_ROLE: arn:aws:iam::568560058349:role/GH-EKS-DEPLOY
  CLUSTER_NAME: demo-app-cluster
  NAMESPACE: default

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.repository }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Get Short SHA
        run: echo "GIT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKER_FILE }}
          push: false
          load: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ env.GIT_SHA }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=${{env.GIT_SHA}}
          REPO=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}
          docker push $REPO:$IMAGE_TAG
          echo "IMAGE=$REPO:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{env.AWS_REGION}}

      - name: Set image & apply manifests
        run: |
          sed -i "s#568560058349.dkr.ecr.ap-southeast-1.amazonaws.com/${ECR_REPO}:latest#${IMAGE}#g" k8s/demo-app.yaml
          kubectl apply -f k8s/demo-app.yaml

      - name: Move cache for next build
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache 

      - name: Wait for rollout
        run: kubectl rollout status deploy/${ECR_REPO} -n ${NAMESPACE} --timeout=180s
